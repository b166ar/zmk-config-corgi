#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

// LAYERS
#define DEF   0
#define NAV   1
#define SYMB  2
#define NUM   3
#define CONF  4


&mt {
    tapping-term-ms = <200>;
};


/ {
  behaviors {

  //Home Mods config for the default layer 
  hm: hold_tap_mods {
    compatible = "zmk,behavior-hold-tap";
    label = "HOLD_TAP_MODS";
    #binding-cells = <2>;
    tapping_term_ms = <300>;
    flavor = "tap-preferred";
    bindings = <&kp>, <&kp>;
};

  //Hold-taps for thumb claster (layer switching)
  hl: hold_tap_layers {
    compatible = "zmk,behavior-hold-tap";
    label = "HOLD_TAP_LAYERS";
    #binding-cells = <2>;
    tapping_term_ms = <300>;
    flavor = "tap-preferred";
    bindings = <&mo>, <&kp>;
};

  };

    keymap {
        compatible = "zmk,keymap";

        // | SW1  | SW2  | SW3  | SW4  | SW5  |         | SW6  | SW7  | SW8  | SW9  | SW10 |
        // | SW11 | SW12 | SW13 | SW14 | SW15 |         | SW16 | SW17 | SW18 | SW19 | SW20 |
        // | SW21 | SW22 | SW23 | SW24 | SW25 |         | SW26 | SW27 | SW28 | SW29 | SW30 |
        //        | SW31 | SW32 | SW33 | SW34 |         | SW35 | SW36 | SW37 | SW38 |

        //DEF Layer

        //Home Mods for the LEFT half
        #define HM_A          &hm LEFT_SHIFT A           //SW11
        #define HM_S          &hm LEFT_CONTROL S         //SW12
        #define HM_D          &hm LEFT_ALT D             //SW13
        #define HM_F          &hm LCMD F                 //SW14
        
        //Home Mods for the RIGHT half 
        #define HM_J          &hm LCMD J                 //SW17
        #define HM_K          &hm LEFT_ALT K             //SW18
        #define HM_L          &hm LEFT_CONTROL L         //SW19
        #define HM_SEMI       &hm LEFT_SHIFT SEMI        //SW20


        //Thumbs: three extra modifiers with keypresses
        #define ESC_HYPER     &mt LS(LC(LA(LCMD))) ESC   //SW31 — HYPER on hold, ESC on Tap
        #define BSPC_CMD      &mt LCMD BSPC              //SW32 — Left CMD on hold, Backspace on Tap
        #define SPACE_SHIFT   &mt LEFT_SHIFT SPACE       //SW33 — Left Shift on hold, Space on Tap

        //Thumbs: four extra layers with keypresses
        #define NUM_ENTER     &hl NUM   ENTER            //SW34 — Number layer on hold, ENTER on Tap
        #define NAV_LANG      &hl NAV   LG(SPACE)        //SW35 — Navigation layer on hold, CMD+Space (lang change) on Tap
        #define SYMB_DOT      &hl SYMB  LA(N5)           //SW36 — Symbol layer on hold, custom DOT on Tap
        #define MY_COMMA      &kp LA(N6)                 //SW37 — Custom comma
        #define CONF_TAB      &hl CONF  TAB              //SW38 — Confing layer on hold, Tab on Tap

        default_layer {
            label = "DEF";
              bindings = <
                &kp Q       &kp W           &kp E          &kp R           &kp T                     &kp Y         &kp U         &kp I          &kp O         &kp P      
                HM_A        HM_S            HM_D           HM_F            &kp G                     &kp H         HM_J          HM_K           HM_L          HM_SEMI  
                &kp Z       &kp X           &kp C          &kp V           &kp B                     &kp N         &kp M         &none          &none         &none
                            ESC_HYPER       BSPC_CMD       SPACE_SHIFT     NUM_ENTER                 NAV_LANG      SYMB_DOT      MY_COMMA       CONF_TAB
                                  >;

                      };


        //Nav layer
        // | SW1  | SW2  | SW3  | SW4  | SW5  |         | SW6  | SW7  | SW8  | SW9  | SW10 |
        // | SW11 | SW12 | SW13 | SW14 | SW15 |         | SW16 | SW17 | SW18 | SW19 | SW20 |
        // | SW21 | SW22 | SW23 | SW24 | SW25 |         | SW26 | SW27 | SW28 | SW29 | SW30 |
        //        | SW31 | SW32 | SW33 | SW34 |         | SW35 | SW36 | SW37 | SW38 |

        //RAW1
                                                          //SW1: &none 
                                                          //SW2: &none                                                  
                                                          //SW3: &none                                                      
                                                          //SW4: &none
        #define DRSS_E         &mt LS(TILDE) TILDE        //SW5: E with diaeresis (Ë), shifted on hold

        #define ZOOM_OUT       &kp LG(MINUS)              //SW6: CMD- shortcut 
        #define ZOOM_IN        &kp LG(EQUAL)              //SW7: CMD+ shortcut 
        #define ARROW_UP       &kp UP                     //SW8: arrow up
                                                          //SW9: &none 
        #define CYR_X          &mt LS(LBKT) LBKT          //SW10: Cyrillic x, and X on hold

        //RAW2
                                                          //SW11: LSHFT on tap
                                                          //SW12: LCTRL on tap 
                                                          //SW13: LALT on tap
                                                          //SW14: LGUI on tap
                                                          //SW15: &none 
 
                                                          //SW16: &none 
        #define ARROW_LEFT     &kp LEFT                   //SW17: arrow left
        #define ARROW_DOWN     &kp DOWN                   //SW18: arrow down
        #define ARROW_RIGHT    &kp RIGHT                  //SW19: arrow right
        #define CYR_E          &mt LS(APOS) APOS          //SW20: Cyrillic э, and Э on hold


        //RAW3
                                                          //SW21: &none 
                                                          //SW22: &none                                                  
                                                          //SW23: &none                                                      
                                                          //SW24: &none
                                                          //SW25: &none

                                                          //SW26: &none
        #define CYR_HS         &mt LS(RBKT) RBKT          //SW27: Cyrillic ъ, and Ъ on hold (hard sign)
                                                          //SW28: &none                                                      
                                                          //SW29: &none
                                                          //SW30: &none

        navigation_layer {
            label = "NAV";
              bindings = <
                &none          &none           &none          &none           DRSS_E                   ZOOM_OUT      ZOOM_IN         ARROW_UP        &none            CYR_X      
                &kp LSHFT      &kp LCTRL       &kp LALT       &kp LGUI        &none                    &none         ARROW_LEFT      ARROW_DOWN      ARROW_RIGHT      CYR_E
                &none          &none           &none          &none           &none                    &none         CYR_HS          &none           &none            &none
                               ESC_HYPER       BSPC_CMD       SPACE_SHIFT     NUM_ENTER                 &none         &none           &none           &none
                                  >; 

                      };


        //SYMB layer

        // | SW1  | SW2  | SW3  | SW4  | SW5  |         | SW6  | SW7  | SW8  | SW9  | SW10 |
        // | SW11 | SW12 | SW13 | SW14 | SW15 |         | SW16 | SW17 | SW18 | SW19 | SW20 |
        // | SW21 | SW22 | SW23 | SW24 | SW25 |         | SW26 | SW27 | SW28 | SW29 | SW30 |
        //        | SW31 | SW32 | SW33 | SW34 |         | SW35 | SW36 | SW37 | SW38 |

        //ROW 1      
        #define S_TILDE         &mt LA(A) LA(G)          //SW1: ~ on tap, ≈ on hold
        #define S_AT            &mt LA(N8) LA(N2)        //SW2: @ on tap, ∞ on hold
        #define S_HASH          &mt LA(N) LA(N3)         //SW3: # on tap, № on hold
        #define S_DOLLAR        &mt LA(U) LA(N4)         //SW4: ₴ on tap, $ on hold
        #define S_PERCENT       &mt LA(N7) LS(N5)        //SW5: % on tap, & on hold

        #define S_UNDER         &mt LS(BSLH) LS(MINUS)   //SW6: _ on tap, | on hold
        #define S_LESSTHAN      &kp LA(L)                //SW7: < on tap
        #define S_GREATERTHAN   &kp LA(SEMI)             //SW8: > on tap
        #define S_MINUS         &mt LA(M) MINUS          //SW9: - on tap, − on hold
        #define S_PLUS          &mt LA(APOS) LS(EQUAL)   //SW10: + on tap, ± on hold

        //ROW 2
        #define HM_LSHIFT       &kp LSHFT                //SW11: Left Shift on tap
        #define HM_LCTRL        &kp LCTRL                //SW12: Left Ctrl on tap
        #define HM_LALT_LPAR    &hm LALT LS(N9)          //SW13: ( on tap, Left Alt on hold
        #define HM_LCMD_RPAR    &hm LGUI LS(N0)          //SW14: ) on tap, Left CMD on hold
                                                         //SW15: &none

        #define S_DASH          &mt LA(O) LA(BSLH)       //SW16: —(long) on tap, ‒(middle) on hold
        #define UKR_LPAW        &kp LA(COMMA)            //SW17: « on tap
        #define UKR_RPAW        &kp LA(DOT)              //SW18: » on tap
        #define S_SLASH         &mt LA(T) LA(I)          //SW19: / on tap, \ on hold
        #define S_STAR          &mt LA(X) LS(N8)         //SW20: * on tap, × on hold

        //ROW 3
        #define ACCENT_CARET    &mt LS(N6) LA(TILDE)     //SW21: ` on tap, ^ on hold
                                                         //SW22: &none
        #define LBRKT_LBRACE    &mt LA(C) LA(LBKT)       //SW23: [ on tap, { on hold
        #define RBRKT_RBRACE    &mt LA(B) LA(RBKT)       //SW24: ] on tap, } on hold
                                                         //SW25: &none

        #define SMCOL_COL       &mt LA(S) LA(Y)          //SW26: ; on tap, : on hold
        #define S_QMARK         &mt LA(F) LA(N9)         //SW27: ? on tap, ¿ on hold 
        #define S_EXCLAM        &mt LA(D) LS(N1)         //SW28: ! on tap, ¡ on hold
        #define APOSTR_QUOTE    &mt LA(N1) LA(R)         //SW29: ' on tap, " on hold
        #define S_EQUAL         &mt LA(EQUAL) EQUAL      //SW30: = on tap, ≠ on hold
 
        symbols_layer {
            label = "SYMB";
              bindings = <
                S_TILDE         S_AT            S_HASH          S_DOLLAR        S_PERCENT                        S_UNDER       S_LESSTHAN      S_GREATERTHAN    S_MINUS         S_PLUS      
                HM_LSHIFT       HM_LCTRL        HM_LALT_LPAR    HM_LCMD_RPAR    &none                            S_DASH        UKR_LPAW        UKR_RPAW         S_SLASH         S_STAR  
                ACCENT_CARET    &none           LBRKT_LBRACE    RBRKT_RBRACE    &none                            SMCOL_COL     S_QMARK         S_EXCLAM         APOSTR_QUOTE    S_EQUAL
                                ESC_HYPER       BSPC_CMD        SPACE_SHIFT     NUM_ENTER                        &none         &none           &none            &none
                                  >;

                      };


        //NUMB layer

        // | SW1  | SW2  | SW3  | SW4  | SW5  |         | SW6  | SW7  | SW8  | SW9  | SW10 |
        // | SW11 | SW12 | SW13 | SW14 | SW15 |         | SW16 | SW17 | SW18 | SW19 | SW20 |
        // | SW21 | SW22 | SW23 | SW24 | SW25 |         | SW26 | SW27 | SW28 | SW29 | SW30 |
        //        | SW31 | SW32 | SW33 | SW34 |         | SW35 | SW36 | SW37 | SW38 |

        //ROW 1  
        #define POWER_LOCK      &mt C_PWR LA(LG(Q))      //SW1: Lock on tap, Power on hold
                                                         //SW2: &none
                                                         //SW3: C_BRI_DN — brightness DOWN
                                                         //SW4: C_BRI_DN — brightness UP
                                                         //SW2: &none

                                                         //SW6: 1 on tap
                                                         //SW7: 2 on tap
        #define S_3             &mt LS(LG(3)) N3         //SW8: 3 on tap, Shift+Cmd+3 on hold (screenshot)
                                                         //SW9: - on tap, − on hold
                                                         //SW10: + on tap, ± on hold   

        //ROW 2
                                                         //SW11: Left Shift on tap
                                                         //SW12: Left Ctrl on tap
        #define HM_LALT_VLD     &hm LALT C_VOL_DN        //SW13: Volume Down on tap, Left Alt on hold
        #define HM_LCMD_VLU     &hm LGUI C_VOL_UP        //SW14: Volume Up on tap, Left CMD on hold
                                                         //SW15: Mute on tap

        #define S_4             &mt LS(LG(4)) N4         //SW16: 4 on tap
        #define S_5             &mt LS(LG(5)) N5         //SW17: 5 on tapp
                                                         //SW18: 6 on tap
                                                         //SW19: / on tap, \ on hold
                                                         //SW20: * on tap, × on hold

        //ROW 3
                                                         //SW21: CapsLock on tap
                                                         //SW22: &none
                                                         //SW23: Previus on tap
                                                         //SW24: Next on tap
                                                         //SW25: Play/Pause on tap

                                                         //SW26: 7 on tap
                                                         //SW27: 8 on tap 
                                                         //SW28: 9 on tap
                                                         //SW29: ' on tap, " on hold
                                                         //SW30: = on tap, ≠ on hold

        //Right Thumb
                                                         //SW35: 0 on tap 
                                                         //SW36: DOT on tap
                                                         //SW37: Comma on tap
                                                         //SW38: &none

        numbers_layer {
            label = "NUM";
              bindings = <
    POWER_LOCK      &none           &kp C_BRI_DN    &kp C_BRI_UP    &none                            &kp N1        &kp N2          S_3              S_MINUS         S_PLUS      
    HM_LSHIFT       HM_LCTRL        HM_LALT_VLD     HM_LCMD_VLU     &kp K_MUTE                       S_4           S_5             &kp N6           S_SLASH         S_STAR  
    &kp CAPS        &none           &kp C_PREV      &kp C_NEXT      &kp C_PP                         &kp N7        &kp N8          &kp N9           APOSTR_QUOTE    S_EQUAL
                    &none           &none           &none           &none                            &kp N0        &kp LA(N6)      &kp LA(N5)       &none
                      >;

                      };                 








        config_layer {
            label = "CONF";
              bindings = <
    &kp Q           &kp W           &kp E           &kp R           &kp T                            &kp Y         &kp U           &kp I            &kp O           &kp P      
    HM_A            HM_S            HM_D            HM_F            &kp G                            &kp H         HM_J            HM_K             HM_L            HM_SEMI  
    &kp Z           &kp X           &kp C           &kp V           &kp B                            &kp N         &kp M           &none            &none           &none
                    &none           &kp DEL         &kp RET         &kp SPACE                        &kp SPACE         &kp TAB         &kp BSPC         &kp RALT
                      >;

                      };     



    };
};